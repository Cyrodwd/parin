#!/bin/env sh

## A script for creating a web build.
## This script is designed with the idea that Popka is included inside your source folder.
## Just copy-paste the web folder into your project and run the script.

# TODO: Try to build a lib file with Dub and link with emcc.

# The config.
output_file="./web/index.html"
shell_file="./web/shell.html"
library_file="./web/libraylib.a"

source_dir="./source"
assets_dir="./assets"

popka_dir="$source_dir/popka/source/popka"
popka_alt_dir="$source_dir/popka" # This is used to check if just the Popka code is included.
main_files="$source_dir/*.d"

# Check if things exist.
script_dir="$(dirname $0)"
cd $script_dir/..
[ ! -e "$shell_file" ] && echo "ERROR: Shell file doesn't exist." && exit 1
echo "OK: Shell file exists."
[ ! -e "$library_file" ] && echo "ERROR: Library file doesn't exist." && exit 1
echo "OK: Library file exists."
[ ! -e "$source_dir" ] && echo "ERROR: Source folder doesn't exist." && exit 1
echo "OK: Source folder exists."
[ ! -e "$assets_dir" ] && echo "ERROR: Assets folder doesn't exist." && exit 1
echo "OK: Assets folder exists."

# Special check for Popka folder.
target_popka_dir="$popka_dir"
if [ ! -e "$target_popka_dir" ]; then
    target_popka_dir="$popka_alt_dir"
    if [ ! -e "$target_popka_dir" ]; then
        echo "ERROR: Popka folder doesn't exist." && exit 1
    fi
fi
echo "OK: Popka folder exists."

# Build for web.
ldc2 -O -c -betterC -mtriple=wasm32-unknown-unknown-wasm -checkaction=halt -I$target_popka_dir/.. -I$source_dir -i $main_files
if [ -z "$(ls $assets_dir)" ]; then
    emcc -o $output_file *.o -Wall -DPLATFORM_WEB $library_file -s USE_GLFW=3 -s ERROR_ON_UNDEFINED_SYMBOLS=0 --shell-file $shell_file
else
    emcc -o $output_file *.o -Wall -DPLATFORM_WEB $library_file -s USE_GLFW=3 -s ERROR_ON_UNDEFINED_SYMBOLS=0 --shell-file $shell_file --preload-file $assets_dir
fi
